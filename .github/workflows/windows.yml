name: windows
on: [push, pull_request]
#on:
  #push:
    #tags:
      #- '*'

jobs:

  windows-vs2017-opencv4:
    runs-on: windows-2016
    env:
      OPENCV_VERSION: 4.5.1
      PACKAGENAME: opencv-mobile-4.5.1-macos
    steps:
    - uses: actions/checkout@v2
    - name: opencv-source
      run: |
        Invoke-WebRequest -Uri https://github.com/opencv/opencv/archive/${{ env.OPENCV_VERSION }}.zip -OutFile opencv-${{ env.OPENCV_VERSION }}.zip
        7z x ./opencv-${{ env.OPENCV_VERSION }}.zip
        cd opencv-${{ env.OPENCV_VERSION }}
        Clear-Content "cmake\OpenCVFindLibsGrfmt.cmake"
        Remove-Item "modules\gapi" -Recurse
        C:\msys64\usr\bin\patch.exe -p1 -i ..\opencv-4.5.1-no-zlib.patch
        Remove-Item "modules\highgui" -Recurse
        Copy-Item -Recurse -Path "..\highgui" -Destination "modules\"
    - name: build-x86
      run: |
        cd opencv-${{ env.OPENCV_VERSION }}
        mkdir build-x86; cd build-x86
        cmake -T v141,host=x64 -A Win32 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release $(type ../../opencv4_cmake_options.txt) -DBUILD_opencv_world=OFF ..
        cmake --build . --config Release -j 2
        cmake --build . --config Release --target install
    - name: build-x64
      run: |
        cd opencv-${{ env.OPENCV_VERSION }}
        mkdir build-x64; cd build-x64
        cmake -T v141,host=x64 -A x64 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release $(type ../../opencv4_cmake_options.txt) -DBUILD_opencv_world=OFF ..
        cmake --build . --config Release -j 2
        cmake --build . --config Release --target install
    - name: package
      run: |
        mkdir ${{ env.PACKAGENAME }}
        mkdir ${{ env.PACKAGENAME }}/x86
        mkdir ${{ env.PACKAGENAME }}/x64
        Copy-Item -Verbose -Recurse -Path "build-x86\install\*" -Destination "${{ env.PACKAGENAME }}\x86"
        Copy-Item -Verbose -Recurse -Path "build-x64\install\*" -Destination "${{ env.PACKAGENAME }}\x64"
        7z a -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  windows-vs2017-opencv3:
    runs-on: windows-2016
    env:
      OPENCV_VERSION: 3.4.13
      PACKAGENAME: opencv-mobile-3.4.13-macos
    steps:
    - uses: actions/checkout@v2
    - name: opencv-source
      run: |
        Invoke-WebRequest -Uri https://github.com/opencv/opencv/archive/${{ env.OPENCV_VERSION }}.zip -OutFile opencv-${{ env.OPENCV_VERSION }}.zip
        7z x ./opencv-${{ env.OPENCV_VERSION }}.zip
        cd opencv-${{ env.OPENCV_VERSION }}
        Clear-Content "cmake\OpenCVFindLibsGrfmt.cmake"
        C:\msys64\usr\bin\patch.exe -p1 -i ..\opencv-3.4.13-no-zlib.patch
        Remove-Item "modules\highgui" -Recurse
        Copy-Item -Recurse -Path "..\highgui" -Destination "modules\"
    - name: build-x86
      run: |
        cd opencv-${{ env.OPENCV_VERSION }}
        mkdir build-x86; cd build-x86
        cmake -T v141,host=x64 -A Win32 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release $(type ../../opencv3_cmake_options.txt) -DBUILD_opencv_world=OFF ..
        cmake --build . --config Release -j 2
        cmake --build . --config Release --target install
    - name: build-x64
      run: |
        cd opencv-${{ env.OPENCV_VERSION }}
        mkdir build-x64; cd build-x64
        cmake -T v141,host=x64 -A x64 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release $(type ../../opencv3_cmake_options.txt) -DBUILD_opencv_world=OFF ..
        cmake --build . --config Release -j 2
        cmake --build . --config Release --target install
    - name: package
      run: |
        mkdir ${{ env.PACKAGENAME }}
        mkdir ${{ env.PACKAGENAME }}/x86
        mkdir ${{ env.PACKAGENAME }}/x64
        Copy-Item -Verbose -Recurse -Path "build-x86\install\*" -Destination "${{ env.PACKAGENAME }}\x86"
        Copy-Item -Verbose -Recurse -Path "build-x64\install\*" -Destination "${{ env.PACKAGENAME }}\x64"
        7z a -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  windows-vs2017-opencv2:
    runs-on: windows-2016
    env:
      OPENCV_VERSION: 2.4.13.7
      PACKAGENAME: opencv-mobile-2.4.13.7-macos
    steps:
    - uses: actions/checkout@v2
    - name: opencv-source
      run: |
        Invoke-WebRequest -Uri https://github.com/opencv/opencv/archive/${{ env.OPENCV_VERSION }}.zip -OutFile opencv-${{ env.OPENCV_VERSION }}.zip
        7z x ./opencv-${{ env.OPENCV_VERSION }}.zip
        cd opencv-${{ env.OPENCV_VERSION }}
        Clear-Content "cmake\OpenCVFindLibsGrfmt.cmake"
        C:\msys64\usr\bin\patch.exe -p1 -i ..\opencv-2.4.13.7-no-zlib.patch
        Remove-Item "modules\highgui" -Recurse
        Copy-Item -Recurse -Path "..\highgui" -Destination "modules\"
    - name: build-x86
      run: |
        cd opencv-${{ env.OPENCV_VERSION }}
        mkdir build-x86; cd build-x86
        cmake -T v141,host=x64 -A Win32 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release $(type ../../opencv2_cmake_options.txt) -DBUILD_opencv_world=OFF ..
        cmake --build . --config Release -j 2
        cmake --build . --config Release --target install
    - name: build-x64
      run: |
        cd opencv-${{ env.OPENCV_VERSION }}
        mkdir build-x64; cd build-x64
        cmake -T v141,host=x64 -A x64 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release $(type ../../opencv2_cmake_options.txt) -DBUILD_opencv_world=OFF ..
        cmake --build . --config Release -j 2
        cmake --build . --config Release --target install
    - name: package
      run: |
        mkdir ${{ env.PACKAGENAME }}
        mkdir ${{ env.PACKAGENAME }}/x86
        mkdir ${{ env.PACKAGENAME }}/x64
        Copy-Item -Verbose -Recurse -Path "build-x86\install\*" -Destination "${{ env.PACKAGENAME }}\x86"
        Copy-Item -Verbose -Recurse -Path "build-x64\install\*" -Destination "${{ env.PACKAGENAME }}\x64"
        7z a -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip
